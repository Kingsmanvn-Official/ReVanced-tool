name: Revanced build
on:
  workflow_call:
    secrets:
      TELEGRAM_TO:
        required: true
      TELEGRAM_TOKEN:
        required: true
  schedule:
    - cron: '30 23 * * *'
  workflow_dispatch:
    inputs:
      VERSION:
        description: 'Leaving blank will be the latest version that revanced support builds. You can build the latest version of YouTube, but errors may occur. Example: 17.35.36'
        required: false
        default: 'Default'
      DEVICE:
        description: 'Select device'
        required: false
        default: 'arm64-v8a'
        type: choice
        options:
          - armeabi-v7a
          - arm64-v8a
          - x86
          - x86_64
      FEATURE:
        description: 'Turn off the feature, Add spaces to distinguish each feature'
        required: false
        default: 'always-autorepeat hide-autoplay-button '
      ICONS:
        description: 'Original icon & Name'
        required: false
        type: boolean
        default: true
      OPTIMIZATION:
        description: 'Video loaded speed'
        required: false
        type: boolean
        default: true
      SHORTS:
        description: 'Show button shorts video'
        required: false
        type: boolean
        default: true
      ROUND:
        description: 'Pip rounded (root)'
        required: false
        type: boolean
        default: true

jobs:
  get_next_version_code:
    runs-on: ubuntu-22.04
    outputs:
      NEXT_VER: ${{ steps.next_ver_code.outputs.NEXT_VER_CODE }}
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"
      - uses: actions/checkout@v3
      - name: Get next version code
        id: next_ver_code
        run: |
          # TAG=$(git tag --sort=creatordate | tail -1)
          # fetch it from github
          TAG=$(wget https://api.github.com/repos/Kingsmanvn-Official/Revanced-tool/releases/latest -O- | tr -d ' ' | sed -n 's/.*"tag_name":"\(.*\)".*/\1/p')
          if [ -z "$TAG" ]; then TAG=0; fi
          echo ::set-output name=NEXT_VER_CODE::$((TAG + 1))

  build1:
    name: 'NO ROOT...'
    runs-on: ubuntu-22.04
    needs: get_next_version_code
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'
      - name: Get sqlite3
        run: bash ./get_sqlite3.sh
      - name: Get MicroG
        run: bash ./get_microg.sh
      - name: Build
        env:
          VERSION: ${{ inputs.VERSION }}
          DEVICE: ${{ inputs.DEVICE }}
          ICONS: ${{ inputs.ICONS }}
          OPTIMIZATION: ${{ inputs.OPTIMIZATION }}
          AMOLED: 'true'
          FEATURE: ${{ inputs.FEATURE }}
          ROUND: ${{ inputs.ROUND }}
          TYPE: 'true'
          SHORTS: ${{ inputs.SHORTS }}

        run: |
          if [ -z "$VERSION" ];then
          SHORTS=true; TYPE=true; ROUND=true; FEATURE="always-autorepeat hide-autoplay-button"; AMOLED=true; ICONS=true; OPTIMIZATION=true; DEVICE='arm64-v8a'; VERSION='Default'
          fi
          . .github/install.sh

      - name: Upload modules to release
        uses: svenstaro/upload-release-action@v2
        with:
          body: ${{ steps.get_output.outputs.BUILD_LOG }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./Up/*
          release_name: Revanced-V${{ env.VS }}
          tag: ${{ needs.get_next_version_code.outputs.NEXT_VER }}
          file_glob: true
          overwrite: true

  build2:
    name: 'ROOT...'
    runs-on: ubuntu-22.04
    needs: get_next_version_code
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'
      - name: Get sqlite3
        run: bash ./get_sqlite3.sh
      - name: Get MicroG
        run: bash ./get_microg.sh
      - name: Build
        env:
          VERSION: ${{ inputs.VERSION }}
          DEVICE: ${{ inputs.DEVICE }}
          ICONS: ${{ inputs.ICONS }}
          OPTIMIZATION: ${{ inputs.OPTIMIZATION }}
          AMOLED: 'true'
          FEATURE: ${{ inputs.FEATURE }}
          ROUND: ${{ inputs.ROUND }}
          TYPE: 'false'
          SHORTS: ${{ inputs.SHORTS }}

        run: |
          if [ -z "$VERSION" ];then
          SHORTS=true; TYPE=false; ROUND=true; FEATURE="always-autorepeat hide-autoplay-button"; AMOLED=true; ICONS=true; OPTIMIZATION=true; DEVICE='arm64-v8a'; VERSION='Default'
          fi
          . .github/install.sh

      - name: Upload json
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./Up*.json
          tag: Up
          file_glob: true
          prerelease: true
          overwrite: true

      - name: Upload modules to release
        uses: svenstaro/upload-release-action@v2
        with:
          body: ${{ steps.get_output.outputs.BUILD_LOG }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./Up/*
          release_name: Revanced-V${{ env.VS }}
          tag: ${{ needs.get_next_version_code.outputs.NEXT_VER }}
          file_glob: true
          overwrite: false

      - name: Switch to update branch
        run: git checkout -f update || git switch --discard-changes --orphan update

  build3:
    name: 'AMOLED NO ROOT...'
    runs-on: ubuntu-22.04
    needs: get_next_version_code
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'
      - name: Get sqlite3
        run: bash ./get_sqlite3.sh
      - name: Get MicroG
        run: bash ./get_microg.sh
      - name: Build
        env:
          VERSION: ${{ inputs.VERSION }}
          DEVICE: ${{ inputs.DEVICE }}
          ICONS: ${{ inputs.ICONS }}
          OPTIMIZATION: ${{ inputs.OPTIMIZATION }}
          AMOLED: 'false'
          FEATURE: ${{ inputs.FEATURE }}
          ROUND: ${{ inputs.ROUND }}
          TYPE: 'true'
          SHORTS: ${{ inputs.SHORTS }}

        run: |
          if [ -z "$VERSION" ];then
          SHORTS=true; TYPE=true; ROUND=true; FEATURE="always-autorepeat hide-autoplay-button"; AMOLED=false; ICONS=true; OPTIMIZATION=true; DEVICE='arm64-v8a'; VERSION='Default'
          fi
          . .github/install.sh

      - name: Get output
        id: get_output
        run: |
          bash ./buildlog.sh
          echo -e "\nYouTube version: ${{ env.VS }}" >>build.log
          echo -e "\n[Revanced-tool repo]($GITHUB_SERVER_URL/Kingsmanvn-Official/Revanced-tool)" >>build.log
          BUILD_LOG=$(cat build.log)
          BUILD_LOG="${BUILD_LOG//'%'/'%25'}"
          BUILD_LOG="${BUILD_LOG//$'\n'/'%0A'}"
          BUILD_LOG="${BUILD_LOG//$'\r'/'%0D'}"
          echo ::set-output name=BUILD_LOG::$BUILD_LOG

      - name: Upload modules to release
        uses: svenstaro/upload-release-action@v2
        with:
          body: ${{ steps.get_output.outputs.BUILD_LOG }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./Up/*
          release_name: Revanced-V${{ env.VS }}
          tag: ${{ needs.get_next_version_code.outputs.NEXT_VER }}
          file_glob: true
          overwrite: false

      - name: Switch to update branch
        run: git checkout -f update || git switch --discard-changes --orphan update

      - name: Update changelog
        id: update_config
        run: |
          cp -f build.log latest_build.md
          CHANGELOG_URL="https://raw.githubusercontent.com/Kingsmanvn-Official/Revanced-tool/update/latest_build.md"

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: update
          skip_checkout: true
          file_pattern: latest_build.md
          commit_message: Bump version ${{ needs.get_next_version_code.outputs.NEXT_VER }}
          push_options: '-f -u'

  build4:
    name: 'AMOLED ROOT...'
    runs-on: ubuntu-22.04
    needs: get_next_version_code
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'
      - name: Get sqlite3
        run: bash ./get_sqlite3.sh
      - name: Get MicroG
        run: bash ./get_microg.sh
      - name: Build
        env:
          VERSION: ${{ inputs.VERSION }}
          DEVICE: ${{ inputs.DEVICE }}
          ICONS: ${{ inputs.ICONS }}
          OPTIMIZATION: ${{ inputs.OPTIMIZATION }}
          AMOLED: 'false'
          FEATURE: ${{ inputs.FEATURE }}
          ROUND: ${{ inputs.ROUND }}
          TYPE: 'false'
          SHORTS: ${{ inputs.SHORTS }}

        run: |
          if [ -z "$VERSION" ];then
          SHORTS=true; TYPE=false; ROUND=true; FEATURE="always-autorepeat hide-autoplay-button"; AMOLED=false; ICONS=true; OPTIMIZATION=true; DEVICE='arm64-v8a'; VERSION='Default'
          fi
          . .github/install.sh

      - name: Upload json
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./Up*.json
          tag: Up
          file_glob: true
          prerelease: true
          overwrite: true

      - name: Upload modules to release
        uses: svenstaro/upload-release-action@v2
        with:
          body: ${{ steps.get_output.outputs.BUILD_LOG }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./Up/*
          release_name: Revanced-V${{ env.VS }}
          tag: ${{ needs.get_next_version_code.outputs.NEXT_VER }}
          file_glob: true
          overwrite: false

  Notify:
    needs:
      - build1
      - build2
      - build3
      - build4
    uses: ./.github/workflows/notify.yml
    secrets:
      TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
